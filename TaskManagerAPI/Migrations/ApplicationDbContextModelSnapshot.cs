// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagerAPI.Models;

#nullable disable

namespace TaskManagerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManagerAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Work"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Personal"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Urgent"
                        });
                });

            modelBuilder.Entity("TaskManagerAPI.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            CategoryId = 1,
                            Description = "Finalize and submit the report",
                            DueDate = new DateTime(2025, 3, 11, 11, 19, 29, 503, DateTimeKind.Utc).AddTicks(2320),
                            Priority = 2,
                            Status = 1,
                            Title = "Complete project report",
                            UserId = 1
                        },
                        new
                        {
                            TaskId = 2,
                            CategoryId = 2,
                            Description = "Buy vegetables and fruits",
                            DueDate = new DateTime(2025, 3, 10, 11, 19, 29, 503, DateTimeKind.Utc).AddTicks(2331),
                            Priority = 1,
                            Status = 0,
                            Title = "Grocery Shopping",
                            UserId = 2
                        },
                        new
                        {
                            TaskId = 3,
                            CategoryId = 1,
                            Description = "Discuss project progress",
                            DueDate = new DateTime(2025, 3, 8, 11, 19, 29, 503, DateTimeKind.Utc).AddTicks(2333),
                            Priority = 2,
                            Status = 2,
                            Title = "Team Meeting",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TaskManagerAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "john@example.com",
                            FullName = "John Doe",
                            Password = "hashedpassword1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "jane@example.com",
                            FullName = "Jane Smith",
                            Password = "hashedpassword2"
                        });
                });

            modelBuilder.Entity("TaskManagerAPI.Models.TaskItem", b =>
                {
                    b.HasOne("TaskManagerAPI.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId");

                    b.HasOne("TaskManagerAPI.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManagerAPI.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManagerAPI.Models.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
